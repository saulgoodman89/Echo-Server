byte order 
OS 시스템이 데이터를 표현하는 방법

0x12345678
Big endian 0x12 0x34 0x56 0x78
Little Endian 0x78 0x56 0x34 0x12

intel / AMD 는 Little endian
ARM / IBM Big endian

서로 다른 바이트 오더를 사용하는 시스템 끼리 통신을 하게 되면
문제가 발생하게 된다. 

네트워크 바이트 오더는 Big endian만 사용한다. 
Little endian을 사용하는 경우 Big endian으로 데이터를 
변경하여 전송해야하고
수신한 데이터에 대해 역순으로 조합해야한다. 

왜 굳이 network byte order를 사용해야하나 ?
대부분이 little endian인데 ?? 
-> IP에서 숫자를 십진수로 표현하고 데이터를 Big endian 으로 표현한다.
필드는 왼쪽 -> 오른쪽으로 설명되며 가장 중요한 옥텟은 왼쪽 , 가장 중요하지 않은 옥텐은 오른쪽에 표시  

RFC 1700
https://www.rfc-editor.org/rfc/rfc1700
The convention in the documentation of Internet Protocols is to
express numbers in decimal and to picture data in "big-endian" order
[COHEN].  That is, fields are described left to right, with the most
significant octet on the left and the least significant octet on the
right.c

IP(Internet Protocol)
OSI 네트워크 계층에서 호스트의 주소지정 / 패킷 분할 및 조립 
- 지정한 IP에 데이터(패킷) 전달



man 
man section 
man option 

https://ihp001.tistory.com/65

g
SYN Flooding 
특정 IP에 과도한 통신시도 
TCP는 세 차례 패킷을 주고 받는 과정 (3-Way-handShake) 과정을 거쳐야 연결이 성립된다. 

1. c -> s SYN
client는 SYN(sequence number) 생성해 server에 전달.
로트 열려있는지 묻는다. 
이 과정에서 backlog queue에 추가된다. 

2.s -> c SYN + ACK
서버가 클라이언트에 ACK를 클라이언트에 전달.
포트가 열려있다고 전달하는 것이고 , ACK 값은 클라이언트로 부터 받은 SYN 값 보다 일정 값을 증가시켜 보낸다. 
서버는 클라이언트의 접속을 받아들이기 위해 RAM에 일정 공간을 확보 

3. c -> s ACK
클라이언트가 서버에 ACK 패킷 전달. 
ack 값은 서버로 부터 받은 SYN 패킷의 값에 일정 값을 더해 보낸다. 
backlog queue에서 삭제된다. 

이런 과정을 거쳐 연결이 된다. 

SYN Flooding 공격은 무엇인가 ? 
Dos 공격의 종류 , 클라이언트가 SYN 패킷만 계속 보내고 3번째 악수 패킷을 안보내면 서버는 클라이언트 연결을 받아 들이기 위해 메모리만 확보한 상태로 대기하게 된다. 


대처 방법 /
1)SYN Cookie를 설정 
SYN Cookie는 ?
서버에서 클라이언트에 주는 임시 통행증
SYN+ACK에 Cookie를 포함해 보내고 일정 시간 동안 응답 패킷이 돌아오지 않으면 방화벽에서 차단하고  
정상적인 패킷이 들어오면 통신이 가능하게한다. 
클라이언트로부터 ACK를 받기 전까지 Backlog Queue에 연결 요청정보 저장X




2)Backlog Queue 크기를 늘린다. 

3)DDOS 장비 사용 
특정 IP에서 얼마동안 얼마만큼의 패킷이 들어오면 ban 시킨다.(임계치 기반 방어)  


https://sata.kr/entry/DOSDDOS-SYN-Flooding-%EA%B3%B5%EA%B2%A9%EC%97%90-%EB%8C%80%ED%95%B4%EC%84%9C-%EC%95%8C%EC%95%84%EB%B3%B4%EC%9E%90